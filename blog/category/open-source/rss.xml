<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ThinkShout</title>
    <description>ThinkShout - We provide web strategy and open source technology to forward-thinking organizations.</description>
    <link>https://thinkshout.com</link>
    <atom:link href="https://thinkshout.com/blog/category/open-source/rss.xml/rss.xml" rel="self" type="application/rss+xml"/>

    
      <item>
  <title>Peer-To-Peer Fundraising With Drupal - RedHen Raiser</title>
  <description>
    <![CDATA[<h3 id="the-origin-of-redhen-raiser">The Origin of RedHen Raiser</h3>

<p>Last summer, the <a href="http://www.capitalareafoodbank.org/">Capital Area Food Bank of Washington, DC</a> came to us with a great idea: The Food Bank wanted to increase its investment in team fundraising initiatives, but they didn’t necessarily want to continue to invest in a “pay as you go” service like StayClassy, TeamRaiser, or Razoo. Rather, they wanted to explore whether or not they could invest in the development of an open source alternative that would eliminate licensing costs, that they could customize more easily, and that they could then give back to the broader nonprofit community.</p>

<p>We’ve spoken a lot in the community regarding various strategies for <a href="http://thinkshout.com/blog/2015/03/the-how-and-why-of-open-source/">how nonprofits can contribute to the development of open source tools</a>. Most of the time, we recommend that nonprofits start off by solving their own organizational problems first, and then abstracting components of the resulting solutions at the end of the project.</p>

<p>However, in the case of the Capital Area Food Bank’s team fundraising needs, a competitive analysis of existing solutions provided us with a well-defined roadmap for how to meet the Food Bank’s goals, while simultaneously working on a suite of contributed tools that could be given back to the broader community. So, in coming up with their solution, we started out by developing RedHen Raiser as a stand-alone Drupal Distribution, and then implemented a customized instance of the Distribution to meet the Food Bank’s more specific design needs.</p>

<h3 id="architectural-planning-for-the-redhen-raiser-drupal-distribution">Architectural Planning for the RedHen Raiser Drupal Distribution</h3>

<p>As mentioned above, we began our feature design process for this peer-to-peer fundraising platform by doing a <strong>competitive analysis of existing tools</strong>. The table below shows our recommended feature set (“Our MVP”) compared to the functionality available as of June 2014 on eight of the leading platforms:</p>

<p><img src="/assets/images/blog/image_0.png" alt="image alt text" /></p>

<p><em>As a quick aside, it’s interesting in comparing these products that there is a lack of consensus in the industry regarding how to refer to these sorts of fundraising tools. We often hear the terms “peer-to-peer fundraising,” “team fundraising,” “viral fundraising,” and even “crowd fundraising” used interchangeably. With crowd fundraising being all the rage in the for-profit world of Kickstarter and the like, we feel that that descriptor could be a little misleading, but the other three terms all speak to different highlights and features of these tools.</em></p>

<p>With a target feature set identified, we began <strong>wireframing our proposed solution</strong>. Again, peer-to-peer fundraising has become somewhat of a well-trodden space. While we came up with a few small enhancements to the user experiences we’ve seen in the marketplace, we recognized that donors are beginning to anticipate certain design patterns when visiting these fundraising sites:</p>

<p><img src="/assets/images/blog/image_1.png" alt="image alt text" /></p>

<p>With the wireframes in place, we turned to <strong>technical architecture</strong>. Given the need to collect a broad range of constituent data, not just user account information, it was clear to us that this Drupal distribution should be built on top of a CRM platform native to Drupal. For obvious reasons, we chose to go with <a href="https://www.drupal.org/project/redhen">RedHen CRM</a>.</p>

<p>We also saw many advantages to leveraging <a href="https://www.drupal.org/project/redhen_donation">RedHen Donation</a>, a flexible tool for building single-page donation forms. With RedHen Donation, a “Donation field” can be attached to an entity, and in so doing, it attaches a form to that entity for processing donations. The <em>RedHen-specific</em> piece to this module is that it is configurable, so that incoming donation data is used to “upsert” (create or update) RedHen contacts. RedHen Donation also integrates with Drupal Commerce to handle order processing and payment handling. Integrating with the <a href="https://www.drupal.org/project/commerce_cardonfile">Commerce Card on File</a> and <a href="https://www.drupal.org/project/commerce_recurring">Commerce Recurring</a> modules, RedHen Donation can be configured to support recurring gifts as well.</p>

<p>Missing from the underlying set of building blocks needed for building a peer-to-peer fundraising platform with Drupal was a tool for managing and tracking fundraising against campaign targets and goals. In the case of peer-to-peer fundraising, each team fundraising page needs to be connected to a larger campaign. To address this requirement, we released a module called <a href="https://www.drupal.org/project/redhen_campaign">RedHen Campaign</a>. This module, coupled with with RedHen Donation, are at the core of RedHen Raiser, allowing us to create a hierarchy between fundraising campaigns, teams, and individual donors.</p>

<p>If you are interested in giving RedHen Raiser a spin, you can <a href="https://www.drupal.org/project/redhen_raiser">install the distribution</a> using your own Drupal Make workflow, you can checkout our own <a href="https://github.com/thinkshout/charlotte">RedHen Raiser development workflow</a>, or you can just click a button to spin up a <a href="https://dashboard.pantheon.io/products/redhen_raiser/spinup">free instance</a> on Pantheon’s hosting platform. (If you’re not a Drupal developer, this last approach is incredibly quick and easy. The distribution even ships with an example fundraising campaign to help you get started.)</p>

<h3 id="customizing-redhen-raiser-to-meet-the-food-banks-needs">Customizing RedHen Raiser to Meet the Food Bank’s Needs</h3>

<p>With a strong base in place, customizing RedHen Raiser to meet the Capital Area Food Bank’s requirements was straightforward and comparably inexpensive. It was largely a matter of adding Drupal Commerce configuration to work with their payment gateway, developing a custom theme that matched the Food Bank’s overall brand, and then training their team to start building out their first peer-to-peer fundraising campaign:</p>

<p><img src="/assets/images/blog/image_2.png" alt="image_2.png" /></p>

<h3 id="the-success-of-the-food-banks-first-peer-to-peer-fundraising-campaign">The Success of the Food Bank’s First Peer-to-Peer Fundraising Campaign</h3>

<p>The Capital Area Food Bank launched this tool around its May 2015 <a href="http://www.capitalareafoodbank.org/food-from-the-bar/">“Food From The Bar” campaign</a>, targeting law firms in the D.C. Metro area. <strong><em>In just 30 days, the Food Bank raised close to <a href="https://give.capitalareafoodbank.org/campaigns/food-bar-2015">$150,000 on RedHen Raiser</a>.</em></strong></p>

<p>The Food Bank’s Chief Digital Officer, Chris von Spiegelfield, had this to say about the project:</p>

<p><em>“The Capital Area Food Bank has been no stranger to peer-to-peer fundraising tools. For years, it has relied on third-party sites such as Causes.com, Razoo, Crowdrise, among others. However, these tools often came with considerable branding and messaging limitations as well as pretty stiff transactional fees. Users got confused about where their money was going and complained after learning a considerable portion of their donation didn’t make its way to the Food Bank. We wanted to provide greater unity of purpose beyond a donation form without all the hassle, which is how we decided to invest in our own crowdfunding platform.</em></p>

<p><em>After kicking the tires at a few SaaS options, we decided the best way forward was to build a customized website.  Out of all the different frameworks proposed, the open-source Drupal and RedHen Raiser combo impressed us the most. We wouldn’t  just be buying a website. We would be leveraging a vast network of programmers and community-minded architects who could start us off in a very good place, not to mention help our platform be secure and grow for the foreseeable future.</em></p>

<p><em>We launched the website this year and couldn’t be happier with what ThinkShout built for us. We’re already seeing it pay dividends across several campaigns. We continue to add new features and hope our site might be a benchmark that other nonprofits could benefit from and contribute to as well.”</em></p>

<h3 id="whats-next-for-redhen-raiser">What’s Next for RedHen Raiser?</h3>

<p>The obvious answer to this question is <em>a port to Drupal 8</em>. But that will take a little time, as many complex pieces, such as Drupal Commerce and RedHen CRM will need to be ported before we can migrate over these higher-level fundraising features. But a RedHen CRM port is on our short(er) term horizon. And frankly, the idea of being able to use RedHen as a “headless CRM” is incredibly exciting.</p>

<p>In the meantime, we are looking forward to collaborating with the community to make RedHen Raiser an even stronger open source competitor to the pay-as-you-go alternatives that are currently out there. So, please, give RedHen Raiser a test drive and send us your feedback!</p>
]]>
  </description>
  <pubDate>Thu, 13 Aug 2015 11:00:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/08/peer-to-peer-with-drupal/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/08/peer-to-peer-with-drupal/</guid>
</item>

    
      <item>
  <title>DrupalCon LA - A Designer's Perspective</title>
  <description>
    <![CDATA[<p>Oh, man. After coming back from DrupalCon Los Angeles with my team at ThinkShout, my brain still hurts… but in a good way. You know, in that same way you feel after binge watching Dr. Who on Netflix leading up to the season finale where The Doctor and Clara… oops. No spoilers. Point being: it’s a feeling of intense brain explosion followed by inspiration and motivation to get up and kick some ass.</p>

<p>Besides attending some fantastic design and UX sessions, I also presented my own session about <a href="https://events.drupal.org/losangeles2015/sessions/ballin-budget-how-create-great-design-without-breaking-bank">designing on a budget</a> and led a BoF about design and prototyping in Drupal. I made a lot of <a href="https://twitter.com/feliarex">awesome</a> <a href="https://twitter.com/jessemutz">new</a> <a href="https://twitter.com/ACFind">friends</a> and reconnected with <a href="https://twitter.com/deviantintegral">some</a> <a href="https://twitter.com/blakehall">old</a> <a href="https://twitter.com/makangus">ones</a> <a href="https://twitter.com/kevishie">as</a> <a href="https://twitter.com/jponch">well</a>.</p>

<p>All in all, it was a great conference and LA was a fantastic host city. My team from ThinkShout and I covered a lot of ground - we found some great bars and restaurants, including my favorite stop, Grand Central Market (where I had an amazing <a href="https://twitter.com/joshriggs/status/598967276163829761">octopus tostada</a> from La Tostaderia).</p>

<p>But anyway, you’re not here to read about bars and restaurants in LA. Let’s talk Design at DrupalCon.</p>

<p>One thing that’s really impressed me about DrupalCon is just how much the breadth of UX and Design content has expanded over the last few years. This was my fourth DrupalCon: my first was 2011 in Chicago, followed by ‘13 in Portland and ‘14 in Austin. I was excited to see there were several sessions in the UX and Design track this year that were less technical, and more about design thinking and problem solving. Personally, I enjoy these kind of talks because I tend to walk away with some new insights into my own process. <strong><em>Design is not the same thing as Front End Development, and DrupalCon is finally realizing and embracing this.</em></strong></p>

<p><img src="/assets/images/blog/design_notes.jpg" alt="design_notes.jpg" /></p>

<h2 id="common-design-themes-from-drupalcon-la">Common Design Themes from DrupalCon LA</h2>

<p>Attending DrupalCon is a great way to get your finger on the pulse of what’s happening in the Drupal community. I’ve noticed a lot of changing trends in the years since my first DrupalCon, starting with the prevalence of responsive design. In the first DrupalCon session I gave in Portland in 2013, only about half the room raised their hands when I asked how many had worked on a responsive Drupal site. This year, nearly everyone raised their hand when I asked the same question. <strong><em>At this point, responsive design is implicit when designing a new Drupal site.</em></strong></p>

<p>Here are some other design and UX trends from this year’s DrupalCon:</p>

<ol>
  <li>
    <p><strong>People are applying design thinking about much more than how a website looks.</strong> <a href="https://twitter.com/meganerinmiller">Megan Erin Miller</a>, a designer at Stanford University, gave a fantastic talk about using Service Design to design <a href="https://events.drupal.org/losangeles2015/sessions/designing-end-end-experiences-why-we-need-service-experience-design">end-to-end experiences</a>. According to Erin, “designing a website is not just about designing good user experience. It’s about designing new processes, new identities, and new partnerships.” I couldn’t agree more. Erin compared the process of building a website to designing a theme park. When you go to a theme park, your experience isn’t just about what happens when you ride the roller coaster. A good theme park experience starts when you see an ad on TV or get an email offer and book your trip online or over the phone. When you get to the theme park, your whole experience is planned and designed, from the moment you walk in the gate, to when you queue up in line for the roller coaster, and on to dining and buying souvenirs. As designers, we should be thinking of our websites as products and how our users interact with these products from all possible channels, and not just what browser they’re using on what device. I’m always looking for new perspectives for my personal design process, and I hope to use some service design techniques in my client work.</p>
  </li>
  <li>
    <p><strong>Components, components, and more components!</strong> Just as the topic of “responsive design” dominated DrupalCon’s design sessions in years past, this year’s hot topic was component-based design. As websites and web apps get more complex and responsive, design needs to be streamlined and simplified. One way we can do that is to design modularly. Gone are the days of creating unique layouts for every page on a website (phew!). Instead, we need to be creating design systems that can be applied efficiently across the entire responsive website. Two great component-based design sessions from DrupalCon LA were, “<a href="https://events.drupal.org/losangeles2015/sessions/new-design-workflow">The New Design Workflow</a>,” and “<a href="https://events.drupal.org/losangeles2015/sessions/pattern-lab-collaboration-using-modular-design-principles">To The Pattern Lab!</a>” In addition to these sessions, I also attended a very informative BoF about CSS Style Guides lead by the one and only <a href="https://twitter.com/JohnAlbin">John Albin Wilkins</a>. At ThinkShout, we already take a component-based approach to design, but I certainly learned some great new ideas and techniques!</p>
  </li>
  <li>
    <p><strong>Longform Storytelling is the new black.</strong> As Drupal shifts its focus towards publishing and news, content creators are embracing <a href="https://events.drupal.org/losangeles2015/sessions/styles-storytelling-cultivating-compelling-long-form-content">rich longform articles and stories</a>. According to <a href="https://twitter.com/Bjoran_Identity">Kristina Bjoran</a> and <a href="https://twitter.com/circlish">Courtney Clark</a> of Forum One, “People generally learn more and remember more when more of their senses are engaged by a story. Stories that include images get about twice the engagement as text-only stories. Stories told with visual elements are instantly captivating. The more senses that are engaged, the more emotions will be engaged and the more memorable the experience will be.” We are including longform content features in many of our new client’s websites at ThinkShout, and it was really great to hear how other industry leaders do it successfully as well.</p>
  </li>
</ol>

<h2 id="design-drupal-and-the-future">Design, Drupal, and the Future</h2>

<p>Each year, the Drupal Association puts more thought into diversifying the session lineup, and it shows. There was a very conscious effort to get more design and UX content, as well as speakers from diverse experiences and backgrounds. To that, I say “Huzzah!” As someone who’s been designing Drupal sites for many years now, it’s great to see the design process being treated as more than just “making it look pretty.” Design and UX is now a core component of DrupalCon, and I’m proud to have helped along the way.</p>

<p>After a week of learning and sharing new ideas, meeting amazing people, and eating some darn good Mexican food, my brain is full and my heart is heavy. I can’t wait to see you all next year!</p>
]]>
  </description>
  <pubDate>Thu, 28 May 2015 09:00:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/05/a-designers-perspective/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/05/a-designers-perspective/</guid>
</item>

    
      <item>
  <title>Committing to D8 Core - A Little Bit Goes a Long Way</title>
  <description>
    <![CDATA[<p>It was the last day of DrupalCon LA and after a long week of sessions, getting to know fellow Drupalistas, and partying until the wee hours, I mustered what little brainpower I had left and made my way to the “First Timer’s Sprint.” Joined by my ThinkShout colleagues, Joe and Nancy, we arrived with beautiful visions of giving back to our community by contributing in some capacity to Drupal 8 core. And so it begins…</p>

<p><img src="/assets/images/blog/image_1.jpg" alt="image_1.jpg" /></p>

<p>We arrived just in time to set our development environment up with a couple hundred other hopeful contributors, and were pleasantly surprised by how quickly that process went and how helpful the mentors were. As soon as we were all set up, the conference staff sent us on our merry way into the next room.</p>

<p>As you may or may not know, Drupal core is enormous! It can be a big, daunting pile of directories and folders that can go down several levels. For a newer developer (and even more seasoned ones, I hear) it takes a great deal of time to navigate this powerful platform. As a result, I was faced with too many possible issues to work on and very little background for how the contributing process works. I’m willing to bet most engineers have been in a similar situation at one time or another and can likely relate. This experience has a name - it’s called “decision fatigue,” where one is faced with so many possibilities to choose from that they become overwhelmed and may even check out entirely. I was there.</p>

<p>Having recognized this feeling before, I piped up and explained to our mentor that we would work more effectively if we were given a single focus or direction. This seemed to work well, and he provided us with a handful of suggestions. That was all fine and good, but after looking at the “Novice” queue, I felt my deer-in-headlights gaze only worsen. Still hungry for a way to gain some practical experience, I reflected back on the options our mentor suggested. He mentioned that “rerolls are easy,” and that seemed like a good place for me to start.</p>

<p>Seizing the moment, I nabbed the nearest mentor and asked him if he could spare a few minutes to help walk me through a reroll. Fortunately, he had a moment to spare, and pointed me to the documentation. Interestingly, this mentor happened to identify with me as a site-builder with little coding experience, yet he was knowledgeable and knew enough Git tricks to be an active participant in the Drupal issue queues.</p>

<p>With this mentor by my side, we dove into the oldest D8 “needs reroll” issue and went to town. Much to my surprise, this issue didn’t take long, but it also helped that another contributor had already rerolled the patch. No problem! I made a comment stating that the patch had been rerolled, how old the issue was (seven years, in this case), and removed the “needs reroll” tag from the issue. Though it felt like a negligible change, my mentor reassured me that I’d  spared another developer from having to go through the same process and reach the same conclusion. Consequently, the issue had moved on to a more progressive state, and there was much rejoicing.</p>

<p>After that was said and done, I went back to the issue queue feeling a tad more confident. Just moments later, our original mentor rushed excitedly back to our table. “Who wants to commit to core?” he asked. We all looked around at each other, not quite sure what to make of it, and responded with a cautiously optimistic “sure, we can help!”</p>

<p>Everything happened rather quickly, which was surprising considering how long it takes to get an average issue through the complete process. Here’s how it went down: There was an issue. A dev in another sprinting room was asked to write a patch. Another dev revised the patch by improving it slightly, and it was then passed to our table to go through the review process. A dev evaluation was put forth, then the issue was passed back for additional review. Finally, it was submitted to be pushed into core.</p>

<p>This was my first DrupalCon and, little did I know, they have a very important tradition - every DrupalCon sprint ends with a live commit by Dries, the founder of Drupal. Our team was lucky enough to be part of this ritual! So, after a full week of delightful Drupal-related shenanigans, I found myself on stage pressing the enter key on Dries’ computer to push our commit to D8 core. The button was pushed and the explosion of celebration and cheers from the audience was nearly deafening.</p>

<p>In this moment, I truly witnessed the heart of the Drupal community in action - this amazing tool could not exist without a number of developers carefully crafting code in accordance with Drupal best practices, and countless generous individuals attentively reviewing the proposed changes. It really does take a village, and the good news is that it doesn’t require being a coding genius to help out.</p>
]]>
  </description>
  <pubDate>Wed, 27 May 2015 10:00:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/05/commiting-to-d8/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/05/commiting-to-d8/</guid>
</item>

    
      <item>
  <title>Meet the ThinkShout Team at DrupalCon LA!</title>
  <description>
    <![CDATA[<p>It’s that time of year again - that’s right, DrupalCon! We’re excited to visit sunny (and warm, and apparently very dry) Los Angeles this year for DrupalCon 2015. We might have to dust off our shorts for this one.</p>

<p>The location for this year’s conference holds a special place in our hearts, as we have a handful of awesome clients and partners (and some friends, too) that we can’t wait to see while we geek out about all things Drupal. As always, we’ll all be running around during this four day event, but here are all the specific places where you can catch up with us:</p>

<h2 id="exhibit-hall">Exhibit Hall##</h2>

<p>We’re partnering with our friends MailChimp at booth 800. Stop by for some cool swag, to talk shop, and learn about the exciting work we’re doing porting the MailChimp module to Drupal 8. We’re also hiring for <a href="http://thinkshout.com/careers/">several positions</a>, so if you’d like to meet face to face and get a better feel for what it would be like to join the ThinkShout team, come chat with us.</p>

<h2 id="official-sessions">Official Sessions##</h2>

<p><a href="https://events.drupal.org/losangeles2015/sessions/scaling-your-business-starts-right-spreadsheets-performance-metrics">Scaling Your Business Starts with the Right Spreadsheets: Performance Metrics</a><a href="https://events.drupal.org/losangeles2015/sessions/scaling-your-business-starts-right-spreadsheets-performance-metrics"> </a></p>

<p>Join ThinkShout’s Sean Larkin and Forum One’s Chris Wolz as they discuss tools and techniques for collaboration and management that will help you make better long-term decisions for your business.</p>

<p>Tuesday May 12th, 10:45-11:45am</p>

<p>Room: 502B - Lullabot</p>

<p><a href="https://events.drupal.org/losangeles2015/sessions/if-i-only-had-framework-creating-unified-digital-experience-across-3rd-party">If I Only Had a Frame(work): Crafting Experiences Across 3rd-Party Systems</a></p>

<p>Lev Tsypin and Brett Meyer will discuss creating and developing a create a cohesive experience across multiple platforms even when they aren’t all open source.</p>

<p>Wednesday May 13th, 1-2pm</p>

<p>Room: 515A - Phase 2</p>

<p><a href="https://events.drupal.org/losangeles2015/sessions/building-your-drupal-based-business-or-what-keeps-you-night">Building Your Drupal-Based Business, Or, What Keeps You Up at Night</a></p>

<p>This facilitated panel session will include ThinkShout’s own Sean Larkin, and will cover insights from agency owners on lessons learned, areas of focus, and what NOT to worry about. All that and some guidance on best practices, and ideas to sustain and support growth - with an active audience Q&amp;A to boot.</p>

<p>Wednesday May 13th, 2:15-3:15pm</p>

<p>Room: Petree C - Acquia</p>

<p><a href="https://events.drupal.org/losangeles2015/sessions/ballin-budget-how-create-great-design-without-breaking-bank">Ballin’ on a Budget: How to Create Great Design Without Breaking the Bank</a><a href="https://events.drupal.org/losangeles2015/sessions/ballin-budget-how-create-great-design-without-breaking-bank"> </a></p>

<p>Our Lead User Experience Designer, Josh Riggs, will give us the low-down on creating kick-ass designs for any budget by utilizing solid design fundamentals, great communication, and maybe a few tricks up the sleeve.</p>

<p>Thursday May 14th, 10:45-11:45am</p>

<p>Room: 501 - NewMedia</p>

<p><a href="https://events.drupal.org/losangeles2015/sessions/mailchimp-drupal-anatomy-successful-partnership">MailChimp and Drupal, The Anatomy of a Successful Partnership</a></p>

<p>In this Lightning Talk, ThinkShout CTO Lev Tsypin and MailChimp API guru Nathan Ranson will cover the evolution of MailChimp’s support for Drupal, the basics of how the integration works, and hint at what’s to come for Drupal 8.</p>

<p>Thursday May 14th, 1:15pm</p>

<p>Room: TBD</p>

<h2 id="birds-of-a-feather-bof">Birds of a Feather (BoF)##</h2>

<p>ThinkShout team members will also be leading a couple of great BoF sessions. We hope to see you there!</p>

<p><a href="https://events.drupal.org/losangeles2015/bofs/design-and-prototyping-methods-responsive-drupal-sites">Design and Prototyping Methods for Responsive Drupal Sites</a> with Josh Riggs (@joshriggs)</p>

<p>Tuesday May 12th, 10:45-11:45am</p>

<p>Room: 410 - The Cherry Hill Company</p>

<p><a href="https://events.drupal.org/losangeles2015/bofs/integrating-drupal-salesforce">Integrating Drupal with Salesforce</a> with Tauno Hogue</p>

<p>Wednesday May 13th, 10:45-11:45am</p>

<p>Room: 505 - Chromatic</p>

<p>And finally, as we mentioned earlier, we’re excited about visiting LA this year because we’ll get a bit of face time with some of the great west coast clients and partners we’ve been working with over the last few years. We will be hosting a special happy hour reception celebrating these LA organizations and honoring one of our long-time clients and partners, the <a href="http://thinkshout.com/work/la-conservancy/">Los Angeles Conservancy</a>, with a donation from our team.</p>

<p>We hope to see you at DrupalCon this year. If you can’t make it, get in touch with us and we’ll fill you in on what you missed! You can also follow along on all the social networks: <a href="https://twitter.com/thinkshout">Twitter</a>, <a href="https://www.facebook.com/ThinkShout">Facebook</a>, and <a href="https://instagram.com/thinkshout/">Instagram</a> - we’ll keep you posted!</p>

<p>To those of you heading down to LA, California or BUST!</p>
]]>
  </description>
  <pubDate>Thu, 07 May 2015 09:00:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/05/drupalcon-la/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/05/drupalcon-la/</guid>
</item>

    
      <item>
  <title>Monkeying Around with D8</title>
  <description>
    <![CDATA[<h2 id="leading-the-charge">Leading the Charge</h2>

<p>I have used A LOT of email marketing service providers over the years and my opinion of them was twofold: they were all similar and none of them were particularly great. Was it possible that this was just a category of business that would never be exciting or innovative? Was I destined to be a project manager who half-heartedly recommended whatever email service provider I was using most at the time to clients?</p>

<p><em>Enter the Chimp…</em></p>

<p>Despite its playful name, <a href="http://www.mailchimp.com">MailChimp</a> made a serious shift in a category that had always had potential but lacked a true champion. My first thought when I used the tool was that even if the feature set was identical to all its competitors, MailChimp’s user interface alone was what set it apart. But once I dug into its capabilities, I became a bona fide fan (dare I say ambassador) of the brand. From automated email workflows and slick segmentation capabilities, to the [Chimpadeedoo] (http://mailchimp.com/features/mobile-signup-forms/) tablet app that facilitates email sign-ups without an internet connection, MailChimp became the new king of the jungle.</p>

<p>Fast forward a few years, and here I am working at ThinkShout, MailChimp’s Drupal partner. We built and maintain the MailChimp Drupal module, which is used by nearly 22,000 websites.</p>

<p>If you are familiar with MailChimp’s motto - listen hard and change fast - (or if you just read the first couple paragraphs of this blog post), then it should come as no surprise that innovation is at the heart of MailChimp’s culture. With the release of Drupal 8 looming this Fall, MailChimp and ThinkShout saw a unique opportunity to lead the charge by porting one of the most popular email modules to be D8 compatible.</p>

<h2 id="the-only-way-through-it-is-through-it">The Only Way Through it is Through it</h2>

<p>Being a trailblazer isn’t easy, and MailChimp understood that pushing the envelope on D8 development would require a significant investment of time and resources. While the core MailChimp module is relatively simple, the bundled submodules are feature-rich and technically complex.</p>

<p>Let’s recap what the MailChimp module allows you to do:</p>

<ul>
  <li>Any “object” in Drupal that has an email address, say a User, Contact, or even a Comment, can be automatically subscribed to a list and segmented based on other attributes, like their zip code.</li>
  <li>Display a list subscription status on an entity or a subscription form.</li>
  <li>Map Drupal Data, such as name and address, to merge fields in MailChimp.</li>
  <li>Create forms to allow site visitors to sign up for any Mailchimp List or combination of Lists.</li>
  <li>Create Pages, Blocks, or both to display forms.</li>
  <li>Create campaigns containing any Drupal entity, or entities, as content.</li>
  <li>Send campaigns created in Drupal through MailChimp or Drupal.</li>
  <li>View campaign statistics and email activity for all list subscribers.</li>
</ul>

<p>Luckily, one of the greatest aspects of our partnership with MailChimp is our shared passion for recognizing opportunity in challenges and giving back to the community. With that spirit, a couple of ThinkShout engineers dove in head first with the goal of porting the majority of the popular D7 module’s features over to D8 in time for a beta release at [DrupalCon LA] (https://events.drupal.org/losangeles2015). During the process, they realized that the available Drupal 8 documentation wasn’t keeping up with the speedy pace of D8 development. Over the course of several weeks, our engineers updated documentation and created examples to make life (or at least development) a little easier for the next developer looking to create something similar.</p>

<h2 id="its-a-sprint-not-a-marathon">It’s a Sprint, Not a Marathon</h2>

<p>With the conference approaching, it was time to call on the ThinkShout village to help put the polish on the new module. Since nine heads are better than two when it comes to user testing and QA, we scheduled a sprint to focus our engineering department on providing that critical perspective needed at the end of a large development project.</p>

<p><img src="/assets/images/blog/mailchimp_roadmap1.jpg" alt="mailchimp_roadmap1.jpg" /></p>

<p>During our afternoon sprint, our team ran a battery of tests (both human and automated) to document and resolve bugs. Our engineering staff has grown quite a bit recently, so the sprint also provided an opportunity for knowledge sharing about MailChimp and D8 development across the team. As a non-engineer fly on the wall, it was exciting to witness the energy at the sprint table, as bugs were closed and high-fives were thrown.</p>

<h2 id="the-future-is-now">The Future is Now</h2>

<p>So far, I’ve focused on what some of the challenges of early D8 development have been, and you’re surely wondering by now “So, what do you think about D8?” Short answer: we’re excited, and we think you should be, too.</p>

<p>Drupal 8 standardizes module development by enforcing PSR-4 compliant namespaces. Whereas D7 allows developers to dictate where a form or entity is placed, for example, D8 loads files in the correct path automatically. What does this mean for developers? Well, it means time saved by not having to search an entire codebase to find where the developer before you placed a form. And because this structure is more in line with general engineering practices, it will be easier for any developer to ramp up for Drupal development.</p>

<p>But the benefits aren’t just for developers. We are also excited about the efficiencies that will be created for our nonprofit clients. Not only do they stand to benefit from the streamlined development approach, but that shift in approach will also make it easier to find resources to maintain and enhance their sites.</p>

<h2 id="learn-more-about-the-new-mailchimp-module">Learn More About the New MailChimp Module</h2>

<p>Come and see us at [DrupalCon LA] (https://events.drupal.org/losangeles2015), where our very own [Lev Tsypin] (http://thinkshout.com/team/lev/) will be giving a [lightning talk] (https://events.drupal.org/losangeles2015/sessions/mailchimp-drupal-anatomy-successful-partnership) about the evolution of MailChimp’s support for Drupal, the basics of how the integration works, and a hint at what’s to come for Drupal 8. Don’t worry if you can’t make it to the talk because we’ll also be hanging out in the MailChimp booth. And if you spot one of us (you’ll recognize us by our ThinkShout hoodies), stop us! We’d love to chat about what we’ve learned about D8 and why were are excited for its release. Also, be sure to check out <a href="http://thinkshout.com/blog/category/mailchimp/">past blogs</a> we’ve written about our work on the MailChimp module.</p>

]]>
  </description>
  <pubDate>Tue, 05 May 2015 09:30:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/05/mailchimp-d8-sprint/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/05/mailchimp-d8-sprint/</guid>
</item>

    
      <item>
  <title>Drupal and Salesforce Integrations Get Some (Data) Integrity</title>
  <description>
    <![CDATA[<p>Hot on the heels of our <a href="http://thinkshout.com/blog/2015/01/reimagined-sprints-redhen-raiser/">all-hands-on-deck sprint to release</a> <a href="https://www.drupal.org/project/redhen_raiser">RedHen Raiser</a>, we decided to change gears to focus on some of our marquee open source contributions, namely the <a href="https://www.drupal.org/project/salesforce">Salesforce Suite</a>.</p>

<p>The Salesforce Suite has been around since Drupal 5 and it’s evolved quite a bit in order to keep up with the ever-changing <a href="http://salesforce.com">Salesforce</a> and Drupal landscapes. Several years ago, we found ourselves relying heavily upon the Salesforce Suite for our Salesforce-Drupal integrations. But there came a point where we realized the module could no longer keep up with our needs. So we, in collaboration with the maintainers of the module at the time, set out to rewrite the suite for Drupal 7.</p>

<p>We completely rewrote the module, leveraging Drupal’s entity architecture, Salesforce’s REST API, and OAUTH for authentication. We also added much-needed features such as a completely new user experience, the ability to synchronize <em>any</em> Drupal and Salesforce objects, and a number of performance enhancements. This was a heck of an undertaking, and there were dozens of other improvements we made to the suite that you can read about in this <a href="http://thinkshout.com/blog/2012/11/lev/salesforce-rest-oauth/">blog post</a>. We’ve maintained this module ever since and have endeavored to add new features and enhancements as they become necessary. We realized this winter that it was time for yet another batch of improvements as the complexity and scale of our integrations has grown.</p>

<p>In addition to over 150 performance enhancements and bug fixes, this release features an all new Drupal entity mapping system which shows a log of all synchronization activity, including any errors. You can now see a log entry for every attempted data synchronization. If there’s a problem, the log will tell you where it is and why it’s an issue. There’s now a whole interface designed to help you pinpoint where these issues are so you can solve them quickly.</p>

<p><img src="http://thinkshout.com/assets/images/blog/salesforce-activity.png" alt="Salesforce Activity" /></p>

<p>Administrators can even manually create or edit a connection between Drupal and Salesforce objects. Before this update, the only way to connect two objects was to create the mapping and then wait for an object to be updated or created in either Drupal or Salesforce. Now you can just enter the Salesforce ID and you’re all set.</p>

<p><img src="http://thinkshout.com/assets/images/blog/salesforce-edit.png" alt="Salesforce Edit Mapping" /></p>

<p>Take the following example to understand why these improvements are so critical. Say that your constituents are volunteering through your Drupal site using the <a href="https://www.drupal.org/project/registration">Registration module</a>. The contacts are created or updated in <a href="https://www.drupal.org/project/redhen">RedHen</a> and then synced to Salesforce. For some reason, you can see the new volunteers in Drupal, but they are not showing in Salesforce. It used to be that the only clue to a problem was buried in the error log. Now, all you have to do is go to the RedHen contact record, and then click “Salesforce activity,” and you’ll see a record of the attempted sync and an explanation of why it failed. Furthermore, you can manually connect the contact to Salesforce by entering the Salesforce ID.</p>

<p>Finally, you can now delete existing mappings, or map to an entirely different content type. The bottom line is that module users have more control of, and insights into, how their data syncs to Salesforce. You can <a href="https://www.drupal.org/node/2452127">download version 7.x-3.1</a> from Drupal.org and experience these improvements for yourself.</p>

<p>We’ve been hard at work polishing several other of our modules and tools, like the RedHen suite and Entity Registration, which also saw new releases. We’ll tell you more about what you can expect from those new versions in our upcoming blogs.</p>

<p>Want to chat about our module work at <a href="https://events.drupal.org/losangeles2015">DrupalCon</a> in LA? You can find us hanging out with our friends from <a href="http://thinkshout.com/blog/category/mailchimp/">MailChimp</a> at their booth. We’d love to talk to you more about what we’re working on.</p>
]]>
  </description>
  <pubDate>Tue, 21 Apr 2015 13:00:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/04/salesforce-new-features/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/04/salesforce-new-features/</guid>
</item>

    
      <item>
  <title>The How and Why of Nonprofits Contributing to Open Source</title>
  <description>
    <![CDATA[<p><em>Originally published on February 23rd, 2015 on <a href="http://www.nten.org/articles/2015/the-how-and-why-of-nonprofits-contributing-to-open-source">NTEN.org</a>. Republished with permission.</em></p>

<p>For the last 15 years or so, we’ve seen consistent growth in nonprofits’ appreciation for how open source tools can support their goals for online engagement. Rarely do we run across an RFP for a nonprofit website redesign that doesn’t specify either Drupal or WordPress as the preferred CMS platform. The immediate benefits of implementing an open source solution are pretty clear:</p>

<ul>
  <li>
    <p>With open source tools, organizations avoid costly licensing fees.</p>
  </li>
  <li>
    <p>Open source tools are generally easier to customize.</p>
  </li>
  <li>
    <p>Open source tools often have stronger and more diverse vendor/support options.</p>
  </li>
  <li>
    <p>Open source platforms are often better suited for integration with other tools and services.</p>
  </li>
</ul>

<p>The list goes on… And without going down a rabbit hole, I’ll simply throw out that the benefits of open source go well beyond content management use cases these days.</p>

<p>But the benefits of nonprofits supporting and contributing to these open source projects and communities are a little less obvious, and sometimes less immediate. While our customers generally appreciate the contributions we make to the larger community in solving their specific problems, we still often get asked the following in the sales cycle:</p>

<p>“So let me get this straight: First you want me to pay you to build my organization a website. Then you want me to pay you to give away everything you built for us to other organizations, many of whom we compete with for eyeballs and donations?”</p>

<p>This is a legitimate question! One of the additional benefits of using an open source solution is that you get a lot of functionality “for free.” You can save budget over building entirely custom solutions with open source because they offer so much functionality out of the box. So, presumably, some of that saving could be lost if additional budget is spent on releasing code to the larger community.</p>

<p>There are many other arguments <em>against</em> open sourcing. Some organizations think that exposing the tools that underpin their website is a security risk. Others worry that if they open source their solutions, the larger community will change the direction of projects they support and rely upon. But most of the time, it comes down to that first argument:</p>

<p>“We know our organization benefits from open source, but we’re not in a position to give back financially or in terms of our time.”</p>

<p>Again, this is an understandable concern, but one that can be mitigated pretty easily with proper planning, good project management, and sound and sustainable engineering practices.</p>

<h3 id="debunking-the-myths-of-contributing-to-open-source">Debunking the Myths of Contributing to Open Source</h3>

<p><strong>Myth #1: “Open sourcing components of our website is a security risk.”</strong></p>

<p>Not really true. Presumably the concern here is that if a would-be hacker were to see the code that underlies parts of your website, they could exploit security holes in that code. While yes, that could happen, the chances are that working with a software developer who has a strong reputation for contributing to an open source project is pretty safe. More importantly, most strong open source communities, such as the Drupal community, have dedicated security teams and thousands of developers who actively review and report issues that could compromise the security of these contributions. In our experience, unreviewed code and code developed by engineers working in isolation are much more likely to present security risks. And on the off chance that someone in the community does report a security issue, more often than not, the reporter will work with you, for free, to come up with a security patch that fixes the issue.</p>

<p><strong>Myth #2: “If we give away our code, we are giving away our organization’s competitive advantage.”</strong></p>

<p>As a software vendor that’s given away code that powers over 45,000 Drupal websites, we can say with confidence: there is no secret sauce. Trust me, all of our competitors use Drupal modules that we’ve released - and vice versa.</p>

<p>By leveraging open source tools, your organization can take advantage of being part of a larger <em>community of practice</em>. And frankly, if your organization is trying to do something new, something that’s not supported by such a community, giving away tools is a great way to build a community around your ideas.</p>

<p>We’ve seen many examples of this. Four years ago, we helped a local nonprofit implement a robust mobile mapping solution on top of the <a href="http://leafletjs.com/">Leaflet Javascript library</a>. At the time, there wasn’t an integration for this library and Drupal. So, as part of this project we asked the client invest 20 hours or so for us release the barebones scaffolding of their mapping tool as a <a href="https://www.drupal.org/project/leaflet">contributed Drupal module</a>.</p>

<p>At first, this contributed module was simply a developer tool. It didn’t have an interface allowing Drupal site builders to use it. It just provided an easier starting point for custom map development. However, this 20 hour starting point lowered the cost for us to build mapping solutions for other clients, who also pitched in a little extra development time here and there to the open source project. Within a few months, the Leaflet module gained enough momentum that other developers from other shops started giving back. Now the module is leveraged on over 5,700 websites and has been supported by code contributions from 37 Drupal developers.</p>

<p>What did that first nonprofit and the other handful of early adopters get for supporting the initial release? Within less than a year of initially contributing to this Drupal module, they opened the door to many tens of thousands of dollars worth of free enhancements to their website and mapping tools.</p>

<p>Did they lose their competitive advantage or the uniqueness of their implementation of these online maps? I think you know what I’m gonna say: <em>No!</em> In fact, the usefulness of their mapping interfaces improved dramatically as those of us with an interest in these tools collaborated and iterated on each other’s ideas and design patterns.</p>

<p><strong>Myth #3: “Contributing to an open source project will take time and money away from solving our organization’s specific problems.”</strong></p>

<p>This perception may or may not be true, depending on some of the specifics of the problems your organization is trying to solve. More importantly, this depends upon the approach you use to contribute to an open source project. We’ve definitely seen organizations get buried in the weeds of trying to do things in an open source way. We’ve seen organizations contribute financially to open source projects <em>on spec</em> (on speculation that the project will succeed). This can present challenges. We’ve also seen vendors try to abstract too much of what they’re building for clients up front, and that can lead to problems as well.</p>

<p>Generally, our preferred approach is generally to solve our clients immediate problems first, and then abstract useful bits that can be reused by the community towards the end of the project. There are situations when the abstraction, or the open source contribution, needs to come first. But for the most part, we encourage our clients to solve their own problems first, and in so doing so provide real-life use cases for the solutions that they open source. Then, abstraction can happen later as a way of future-proofing their investment.</p>

<p><strong>Myth #4: “If we open source our tools, we’ll lose control over the direction of the technologies in which we’ve invested.”</strong></p>

<p>Don’t worry, this isn’t true! In fact:</p>

<p><em>Contributing to an open source project is positively selfish.</em></p>

<p>By this I mean that by contributing to an open source project, your organization actually gets to have a stronger say in the direction of that project. Most open source communities are guided by those that just get up and do, rather than by committee or council.</p>

<p>Our team loves the fact that so many organizations leverage our Drupal modules to meet their own needs. It’s great showing up at nonprofit technology conferences and having folks come up to us to thank us for our contributions. But what’s even better is knowing that these projects have been guided by the direct business needs of our nonprofit clients.</p>

<h3 id="how-to-go-about-contributing-to-open-source">How to Go About Contributing to Open Source</h3>

<p>There are a number of ways that your nonprofit organization can contribute to open source. In most of the examples above, we speak to financial contributions towards the release of open source code. Those are obviously great, but meaningful community contributions can start much smaller:</p>

<ul>
  <li>
    <p><strong>Participate in an open source community event.</strong> By engaging with other organizations with similar needs, you can help guide the conversation regarding how a platform like Drupal can support your organization’s needs. Events like <a href="http://myntc.nten.org/eventdetails/precon/drupal">Drupal Day at the NTC</a> are a great place to start.</p>
  </li>
  <li>
    <p><strong>Host a code sprint or hackathon.</strong> Sometimes developers just need a space to hack on stuff. You’d be surprised at the meaningful that connections and support that can come from just coordinating a local hackathon. One of our clients, <a href="http://www.feedingtexas.org/">Feeding Texas</a>, recently took this idea further and hosted a dedicated sprint on a hunger mapping project called <a href="https://github.com/snap-hackathon/snapshot-texas">SNAPshot Texas</a>. As part of this sprint, four developers volunteered a weekend to helping Feeding Texas build a data visualization of Food Stamp data across the state. This effort built upon the work of Feeding America volunteers across the country and became a cornerstone of our redesign of <a href="http://www.feedingtexas.org/">FeedingTexas.org</a>. Feeding Texas believes so strongly in the benefits they received from this work that they felt comfortable <a href="https://github.com/thinkshout/feeding-texas">open sourcing their entire website on GitHub</a>.</p>
  </li>
</ul>

<p>Of course, if your organization is considering a more direct contribution to an open source project, for example, by releasing a module as part of a website redesign, we have some advice for you as well:</p>

<ul>
  <li>
    <p><strong>First and foremost, solve your organization’s immediate problems first.</strong> As mentioned earlier in the article, the failure of many open source projects is that their sponsors have to handle too many use cases all at once. Rest assured that if you solve your organization’s problems, you’re likely to create something that’s useful to others. Not every contribution needs to solve every problem.</p>
  </li>
  <li>
    <p><strong>Know when to start with abstraction vs. when to end with abstraction.</strong> We have been involved in client-driven open source projects, such as the release of <a href="http://drupal.org/project/redhen_raiser">RedHen Raiser</a>, a peer-to-peer fundraising platform, for which the open source contribution needed to be made first, before addressing our client’s specific requirements. In the case of RedHen Raiser, the Capital Area Food Bank of Washington, DC came to us with a need for a Drupal-based peer-to-peer fundraising solution. Learning that nothing like that existed, they were excited to help us get something started that they could then leverage. In this case, starting with abstraction made the most sense, given the technical complexities of releasing such a tool on Drupal. However, for the most part, the majority of open source contributions come from easy wins that are abstracted after the fact. Of course, there’s no hard and fast rule about this - it’s just something that you need to consider.</p>
  </li>
  <li>
    <p><strong>Celebrate your contributions and the development team!</strong> It might sound silly, but many software nerds take great pride in just knowing that the stuff they build is going to be seen by their peers. By offering to open source even just small components of your project, you are more likely to motivate your development partners. They will generally work harder and do better work, which again adds immediate value to your project.</p>
  </li>
</ul>

<p>In conclusion, I hope that this article helps you better understand that there’s a lot of value in contributing to open source. It doesn’t have to be that daunting of an effort and it doesn’t have to take you off task.</p>
]]>
  </description>
  <pubDate>Wed, 25 Mar 2015 00:00:00 -0400</pubDate>
  <link>https://thinkshout.com/blog/2015/03/the-how-and-why-of-open-source/</link>
  <guid isPermaLink="true">https://thinkshout.com/blog/2015/03/the-how-and-why-of-open-source/</guid>
</item>

    

  </channel>
</rss>
